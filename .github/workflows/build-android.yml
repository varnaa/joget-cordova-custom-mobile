name: Build Android

on: [workflow_dispatch]

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
  
      - name: Import Android keystore and Google services JSON
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.ANDROID_GOOGLE_SERVICES_JSON_BASE64 }}
        run: |
          # import keystore and google services json from secrets
          echo -n "$KEYSTORE_BASE64" | base64 --decode > android.keystore
          echo -n "$GOOGLE_SERVICES_JSON_BASE64" | base64 --decode > android-google-services.json

      - name: Install Cordova
        run: npm install -g cordova

      - name: Add Cordova Android platform
        run: cordova platform add android@12.0.0

      - name: Add cordova-plugin-androidx-adapter
        run: cordova plugin add cordova-plugin-androidx-adapter@1.1.3

      - name: Add custom cordova-plugin-inappbrowser-download
        run: cordova plugin add ./cordova-plugin-inappbrowser-download

      - name: Add cordova-plugin-device
        run: cordova plugin add cordova-plugin-device@2.1.0

      - name: Add cordova-plugin-push
        env:
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.ANDROID_GOOGLE_SERVICES_JSON_BASE64 }}
        if: env.GOOGLE_SERVICES_JSON_BASE64 != ''
        run: cordova plugin add @havesource/cordova-plugin-push@dev

      - name: Add cordova-plugin-splashscreen
        run: cordova plugin add cordova-plugin-splashscreen@6.0.1

      - name: Add cordova-plugin-media-capture
        run: cordova plugin add cordova-plugin-media-capture@4.0.0

      - name: Add cordova-plugin-dialogs
        run: cordova plugin add cordova-plugin-dialogs@2.0.2

      - name: Add cordova-plugin-vibration
        run: cordova plugin add cordova-plugin-vibration@3.1.1

      - name: Add cordova-plugin-geolocation
        run: cordova plugin add cordova-plugin-geolocation@4.1.0

      - name: Add cordova-plugin-fingerprint-aio
        run: cordova plugin add cordova-plugin-fingerprint-aio@5.0.1

      - name: Add cordova-plugin-camera
        run: cordova plugin add cordova-plugin-camera@6.0.0

      - name: Add cordova-plugin-android-permissions
        run: cordova plugin add cordova-plugin-android-permissions@1.1.5

      - name: Add cordova-plugin-deeplinking-urlscheme
        run: $ cordova plugin add https://github.com/EddyVerbruggen/Custom-URL-scheme.git --variable URL_SCHEME=pngwallet

      - name: Build Android release APK
        run: cordova build android --release -- --keystore=android.keystore --storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} --alias=${{ secrets.ANDROID_KEYSTORE_ALIAS }} --password=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} --packageType=apk

      - name: Upload Android release APK
        uses: actions/upload-artifact@v1
        with:
          name: android-app-release
          path: platforms/android/app/build/outputs/apk/release/app-release.apk

      - name: Build Android App Bundle
        run: cordova build android --release -- --keystore=android.keystore --storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} --alias=${{ secrets.ANDROID_KEYSTORE_ALIAS }} --password=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} --packageType=bundle

      - name: Upload Android App Bundle
        uses: actions/upload-artifact@v1
        with:
          name: android-app-release
          path: platforms/android/app/build/outputs/bundle/release/app-release.aab
  
